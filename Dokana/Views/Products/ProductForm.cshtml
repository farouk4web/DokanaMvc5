@using Dokana.Resources

@model Dokana.ViewModels.ProductFormViewModel
@{
    Model.Product.AvailableToSale = true;
    ViewBag.Title = Model.Product.Id == 0 ? ResourceKeys.newProduct : Model.Product.Name;
    Layout = "~/Views/ControlPanel/_CPanelLayout.cshtml";
}

<div class="productForm">

    <form action="/Products/Save" method="post" enctype="multipart/form-data" class="siteForm">
        <div class="form-group">
            <h2>@ViewBag.Title</h2>
        </div>
        <div class="form-group">
            @Html.ValidationSummary(true)
        </div>

        <div class="form-group">
            @Html.TextBoxFor(m => m.Product.Name, new { @class = "form-control", placeholder = ResourceKeys.productNamePlacholder })
            @Html.ValidationMessageFor(m => m.Product.Name)
        </div>

        <div class="form-group">
            @Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.Categories, "Id", "name"), ResourceKeys.productCategryPlaceholder, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Product.CategoryId)
        </div>

        <div class="row text-center numbersInput">
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="Product_Price">@ResourceKeys.productPriceLabel <span class="price"><b>EGB</b></span></label>
                    @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.Price)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label for="Product_Price">@ResourceKeys.productNumberLabel</label>
                    <br />
                    @Html.TextBoxFor(m => m.Product.UnitsInStore, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.UnitsInStore)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.TextAreaFor(m => m.Product.Description, new { @class = "form-control", placeholder = ResourceKeys.productDescriptionPlacholder })
            @Html.ValidationMessageFor(m => m.Product.Description)
        </div>

        <div class="row text-center">
            <div class="col-sm-4">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.Product.AvailableToSale) @ResourceKeys.availableToSale
                    </label>
                </div>
                @Html.ValidationMessageFor(m => m.Product.AvailableToSale)
            </div>
            
            <div class="col-sm-4">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.Product.ShowInSlider) @ResourceKeys.showInSlider
                    </label>
                </div>
                @Html.ValidationMessageFor(m => m.Product.ShowInSlider)
            </div>

            <div class="col-sm-4">
                <div class="form-group pictureButton">
                    <label for="productImage">
                        <i class="glyphicon glyphicon-picture"></i> @ResourceKeys.chooseProductPhoto
                    </label>
                    <input type="file" name="productPicture" id="productImage" class="hidden" />
                </div>
            </div>
        </div>

        <div class="alert alert-warning clientSideAlert text-center">
            <p class="lead">
                @ResourceKeys.chooseProductImageErrMsg
            </p>
        </div>

        <div class="form-group">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Product.Id)
            <button class="btn btn-primary" type="submit">@ResourceKeys.save</button>
        </div>
    </form>

</div>

@section styles {
    @Styles.Render("~/siteForm")
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/js/productform")
}